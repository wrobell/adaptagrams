/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.36
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace org.adaptagrams.cola {

using System;
using System.Runtime.InteropServices;

public class PageBoundaryConstraints : CompoundConstraint {
  private HandleRef swigCPtr;

  internal PageBoundaryConstraints(IntPtr cPtr, bool cMemoryOwn) : base(colaPINVOKE.PageBoundaryConstraintsUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(PageBoundaryConstraints obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~PageBoundaryConstraints() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        colaPINVOKE.delete_PageBoundaryConstraints(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public PageBoundaryConstraints(double lm, double rm, double w) : this(colaPINVOKE.new_PageBoundaryConstraints__SWIG_0(lm, rm, w), true) {
  }

  public PageBoundaryConstraints(double lm, double rm, double lw, double rw) : this(colaPINVOKE.new_PageBoundaryConstraints__SWIG_1(lm, rm, lw, rw), true) {
  }

  public override void generateVariables(SWIGTYPE_p_std__vectorT_vpsc__Variable_p_t vars) {
    colaPINVOKE.PageBoundaryConstraints_generateVariables(swigCPtr, SWIGTYPE_p_std__vectorT_vpsc__Variable_p_t.getCPtr(vars));
    if (colaPINVOKE.SWIGPendingException.Pending) throw colaPINVOKE.SWIGPendingException.Retrieve();
  }

  public override void generateSeparationConstraints(SWIGTYPE_p_std__vectorT_vpsc__Variable_p_t vars, SWIGTYPE_p_std__vectorT_vpsc__Constraint_p_t gcs) {
    colaPINVOKE.PageBoundaryConstraints_generateSeparationConstraints(swigCPtr, SWIGTYPE_p_std__vectorT_vpsc__Variable_p_t.getCPtr(vars), SWIGTYPE_p_std__vectorT_vpsc__Constraint_p_t.getCPtr(gcs));
    if (colaPINVOKE.SWIGPendingException.Pending) throw colaPINVOKE.SWIGPendingException.Retrieve();
  }

  public override void updatePosition() {
    colaPINVOKE.PageBoundaryConstraints_updatePosition(swigCPtr);
  }

  public double getActualLeftMargin() {
    double ret = colaPINVOKE.PageBoundaryConstraints_getActualLeftMargin(swigCPtr);
    return ret;
  }

  public double getActualRightMargin() {
    double ret = colaPINVOKE.PageBoundaryConstraints_getActualRightMargin(swigCPtr);
    return ret;
  }

  public OffsetList offsets {
    set {
      colaPINVOKE.PageBoundaryConstraints_offsets_set(swigCPtr, OffsetList.getCPtr(value));
    } 
    get {
      IntPtr cPtr = colaPINVOKE.PageBoundaryConstraints_offsets_get(swigCPtr);
      OffsetList ret = (cPtr == IntPtr.Zero) ? null : new OffsetList(cPtr, false);
      return ret;
    } 
  }

}

}
