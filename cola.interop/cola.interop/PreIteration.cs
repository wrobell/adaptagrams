/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.36
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace org.adaptagrams.cola {

using System;
using System.Runtime.InteropServices;

public class PreIteration : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal PreIteration(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(PreIteration obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~PreIteration() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        colaPINVOKE.delete_PreIteration(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public PreIteration(ColaLocks locks, ColaResizes resizes) : this(colaPINVOKE.new_PreIteration__SWIG_0(ColaLocks.getCPtr(locks), ColaResizes.getCPtr(resizes)), true) {
    if (colaPINVOKE.SWIGPendingException.Pending) throw colaPINVOKE.SWIGPendingException.Retrieve();
  }

  public PreIteration(ColaLocks locks) : this(colaPINVOKE.new_PreIteration__SWIG_1(ColaLocks.getCPtr(locks)), true) {
    if (colaPINVOKE.SWIGPendingException.Pending) throw colaPINVOKE.SWIGPendingException.Retrieve();
  }

  public PreIteration() : this(colaPINVOKE.new_PreIteration__SWIG_2(), true) {
  }

  public PreIteration(ColaResizes resizes) : this(colaPINVOKE.new_PreIteration__SWIG_3(ColaResizes.getCPtr(resizes)), true) {
    if (colaPINVOKE.SWIGPendingException.Pending) throw colaPINVOKE.SWIGPendingException.Retrieve();
  }

  public ColaLocks locks {
    set {
      colaPINVOKE.PreIteration_locks_set(swigCPtr, ColaLocks.getCPtr(value));
      if (colaPINVOKE.SWIGPendingException.Pending) throw colaPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      ColaLocks ret = new ColaLocks(colaPINVOKE.PreIteration_locks_get(swigCPtr), false);
      if (colaPINVOKE.SWIGPendingException.Pending) throw colaPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public ColaResizes resizes {
    set {
      colaPINVOKE.PreIteration_resizes_set(swigCPtr, ColaResizes.getCPtr(value));
      if (colaPINVOKE.SWIGPendingException.Pending) throw colaPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      ColaResizes ret = new ColaResizes(colaPINVOKE.PreIteration_resizes_get(swigCPtr), false);
      if (colaPINVOKE.SWIGPendingException.Pending) throw colaPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public bool changed {
    set {
      colaPINVOKE.PreIteration_changed_set(swigCPtr, value);
    } 
    get {
      bool ret = colaPINVOKE.PreIteration_changed_get(swigCPtr);
      return ret;
    } 
  }

}

}
