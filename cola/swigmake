OSNAME:=$(shell uname -s | sed 's/_.*//')

ifeq ($(OSNAME),Darwin)
	CPPFLAGS =
	JAVA_INCLUDE = -I/System/Library/Frameworks/JavaVM.framework/Headers
	LINK = $(CXX) $(CXXFLAGS) -dynamiclib -framework JavaVM -o adaptagrams.dylib
else 
	# Some make versions say only one else per if statment.
	ifeq ($(OSNAME),Linux)
		CPPFLAGS = -fPIC
		JAVA_INCLUDE = -I/usr/lib/jvm/java-6-sun/include \
						-I/usr/lib/jvm/java-6-sun/include/linux
		LINK = $(CXX) $(CXXFLAGS) -shared -o adaptagrams.so
	else 
	    ifeq ($(OSNAME),MINGW32)
			CPPFLAGS =
			JAVA_INCLUDE = -I/c/Programme/Java/jdk1.6.0_24/include \
							-I/c/Programme/Java/jdk1.6.0_24/include/win32
			LINK = $(CXX) $(CXXFLAGS) -Wl,--add-stdcall-alias -shared -o adaptagrams.dll
		endif
	endif
endif

all: adaptagrams jar

swig-worked: clean cola.i
	mkdir -p java/src/org/dunnart/adaptagrams
	mkdir -p java/build/org/dunnart/adaptagrams
	swig -DUSE_ASSERT_EXCEPTIONS -c++ -java -package org.dunnart.adaptagrams -outdir java/src/org/dunnart/adaptagrams cola.i
	touch swig-worked

cola_wrap.o: swig-worked
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -I. $(JAVA_INCLUDE) -c cola_wrap.cxx

adaptagrams: cola_wrap.o
	$(LINK) cola_wrap.o libcola/.libs/libcola.a libtopology/.libs/libtopology.a libavoid/.libs/libavoid.a libvpsc/.libs/libvpsc.a

jar: swig-worked
	javac -d java/build/ java/src/org/dunnart/adaptagrams/*.java
	jar cf adaptagramsswig.jar -C java/build/ .

realclean: clean

clean: mostlyclean
	rm -f adaptagrams.*

mostlyclean:
	rm -f swig-worked
	rm -f cola_wrap.o cola_wrap.cxx adaptagramsswig.jar
	rm -rf java/*

.PHONY: all clean mostlyclean realclean

