INCLUDES = -I$(top_srcdir) -I/usr/include/cairo -I/usr/include/cairomm-1.0
common_LDADD = $(top_builddir)/libcola/libcola.a $(top_builddir)/libvpsc/libvpsc.a $(top_builddir)/libtopology/libtopology.a $(top_builddir)/libproject/libproject.a
#check_PROGRAMS = unconstrained constrained containment straightener shortest_paths connected_components large_graph convex_hull scale_free trees random_graph large_graph nodedragging topology boundary planar
#check_PROGRAMS = convex_hull unconstrained topology nodedragging boundary
check_PROGRAMS = boundary

shortest_paths_LDADD = $(top_builddir)/libcola/libcola.a
shortest_paths_SOURCES = shortest_paths.cpp
unconstrained_LDADD = $(top_builddir)/libcola/libcola.a $(top_builddir)/libvpsc/libvpsc.a $(top_builddir)/libtopology/libtopology.a $(top_builddir)/libproject/libproject.a
unconstrained_SOURCES = unconstrained.cpp 
constrained_LDADD = $(top_builddir)/libcola/libcola.a $(top_builddir)/libvpsc/libvpsc.a
constrained_SOURCES = constrained.cpp 
containment_LDADD = $(top_builddir)/libcola/libcola.a $(top_builddir)/libvpsc/libvpsc.a
containment_SOURCES = containment.cpp 
containment2_LDADD = $(top_builddir)/libcola/libcola.a $(top_builddir)/libvpsc/libvpsc.a
containment2_SOURCES = containment2.cpp 
straightener_LDADD = $(top_builddir)/libcola/libcola.a $(top_builddir)/libvpsc/libvpsc.a
straightener_SOURCES = straightener.cpp 
topology_LDADD = $(common_LDADD)
topology_SOURCES = topology.cpp 
boundary_LDADD = $(common_LDADD)
boundary_SOURCES = boundary.cpp 
nodedragging_LDADD = $(common_LDADD)
nodedragging_SOURCES = nodedragging.cpp 
planar_LDADD = $(common_LDADD)
planar_SOURCES = planar.cpp 
#connected_components_LDADD = $(top_builddir)/libcola/libcola.a $(top_builddir)/libvpsc/libvpsc.a
#connected_components_SOURCES = connected_components.cpp
#sparse_matrix_LDADD = $(top_srcdir)/libcola/libcola.a $(top_srcdir)/libvpsc/libvpsc.a
#sparse_matrix_SOURCES = sparse_matrix.cpp
convex_hull_SOURCES = convex_hull.cpp
convex_hull_LDADD = $(common_LDADD) -lcairo -lcairomm-1.0
#unsatisfiable_LDADD = $(top_builddir)/libcola/libcola.a $(top_builddir)/libvpsc/libvpsc.a
#unsatisfiable_SOURCES = unsatisfiable.cpp 
#aarontest_SOURCES = aarontest.cpp
#aarontest_LDADD = $(top_srcdir)/libcola/libcola.a $(top_builddir)/libvpsc/libvpsc.a -lcairo -lcairomm-1.0
#qo1_SOURCES = qo1.c
#qo1_LDADD = -L$(mosek_home)/bin -lmosek -lguide -limf
small_graph_LDADD = $(top_srcdir)/libcola/libcola.a $(top_srcdir)/libvpsc/libvpsc.a
small_graph_SOURCES = small_graph.cpp 
large_graph_LDADD = $(top_srcdir)/libcola/libcola.a $(top_srcdir)/libvpsc/libvpsc.a
large_graph_SOURCES = large_graph.cpp 
gml_graph_LDADD = $(top_srcdir)/libcola/libcola.a $(top_srcdir)/libvpsc/libvpsc.a /usr/lib/libboost_regex.so
gml_graph_SOURCES = gml_graph.cpp 
scale_free_LDADD = $(top_srcdir)/libcola/libcola.a $(top_srcdir)/libvpsc/libvpsc.a
scale_free_SOURCES = scale_free.cpp 
random_graph_LDADD = $(top_srcdir)/libcola/libcola.a $(top_srcdir)/libvpsc/libvpsc.a
random_graph_SOURCES = random_graph.cpp 
trees_LDADD = $(top_srcdir)/libcola/libcola.a $(top_srcdir)/libvpsc/libvpsc.a
trees_SOURCES = trees.cpp 
TESTS = $(check_PROGRAMS)
