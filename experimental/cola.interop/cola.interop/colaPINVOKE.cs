/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.36
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace org.adaptagrams.cola {

using System;
using System.Runtime.InteropServices;

class colaPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [DllImport("cola", EntryPoint="SWIGRegisterExceptionCallbacks_cola")]
    public static extern void SWIGRegisterExceptionCallbacks_cola(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [DllImport("cola", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_cola")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_cola(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_cola(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_cola(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [ThreadStatic]
    private static Exception pendingException = null;
    private static int numExceptionsPending = 0;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(Exception e) {
      if (pendingException != null)
        throw new ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(typeof(colaPINVOKE)) {
        numExceptionsPending++;
      }
    }

    public static Exception Retrieve() {
      Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(typeof(colaPINVOKE)) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [DllImport("cola", EntryPoint="SWIGRegisterStringCallback_cola")]
    public static extern void SWIGRegisterStringCallback_cola(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_cola(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  [DllImport("cola", EntryPoint="CSharp_EdgeVector_Clear")]
  public static extern void EdgeVector_Clear(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_EdgeVector_Add")]
  public static extern void EdgeVector_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_EdgeVector_size")]
  public static extern uint EdgeVector_size(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_EdgeVector_capacity")]
  public static extern uint EdgeVector_capacity(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_EdgeVector_reserve")]
  public static extern void EdgeVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_new_EdgeVector__SWIG_0")]
  public static extern IntPtr new_EdgeVector__SWIG_0();

  [DllImport("cola", EntryPoint="CSharp_new_EdgeVector__SWIG_1")]
  public static extern IntPtr new_EdgeVector__SWIG_1(int jarg1);

  [DllImport("cola", EntryPoint="CSharp_EdgeVector_getitemcopy")]
  public static extern IntPtr EdgeVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_EdgeVector_getitem")]
  public static extern IntPtr EdgeVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_EdgeVector_setitem")]
  public static extern void EdgeVector_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_EdgeVector_AddRange")]
  public static extern void EdgeVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_EdgeVector_GetRange")]
  public static extern IntPtr EdgeVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_EdgeVector_Insert")]
  public static extern void EdgeVector_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_EdgeVector_InsertRange")]
  public static extern void EdgeVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_EdgeVector_RemoveAt")]
  public static extern void EdgeVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_EdgeVector_RemoveRange")]
  public static extern void EdgeVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_EdgeVector_Repeat")]
  public static extern IntPtr EdgeVector_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_EdgeVector_Reverse__SWIG_0")]
  public static extern void EdgeVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_EdgeVector_Reverse__SWIG_1")]
  public static extern void EdgeVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_EdgeVector_SetRange")]
  public static extern void EdgeVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_delete_EdgeVector")]
  public static extern void delete_EdgeVector(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_new_ColaEdge__SWIG_0")]
  public static extern IntPtr new_ColaEdge__SWIG_0();

  [DllImport("cola", EntryPoint="CSharp_new_ColaEdge__SWIG_1")]
  public static extern IntPtr new_ColaEdge__SWIG_1(uint jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_new_ColaEdge__SWIG_2")]
  public static extern IntPtr new_ColaEdge__SWIG_2(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_ColaEdge_first_set")]
  public static extern void ColaEdge_first_set(HandleRef jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_ColaEdge_first_get")]
  public static extern uint ColaEdge_first_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_ColaEdge_second_set")]
  public static extern void ColaEdge_second_set(HandleRef jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_ColaEdge_second_get")]
  public static extern uint ColaEdge_second_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_delete_ColaEdge")]
  public static extern void delete_ColaEdge(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_new_OffsetPair__SWIG_0")]
  public static extern IntPtr new_OffsetPair__SWIG_0();

  [DllImport("cola", EntryPoint="CSharp_new_OffsetPair__SWIG_1")]
  public static extern IntPtr new_OffsetPair__SWIG_1(uint jarg1, double jarg2);

  [DllImport("cola", EntryPoint="CSharp_new_OffsetPair__SWIG_2")]
  public static extern IntPtr new_OffsetPair__SWIG_2(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_OffsetPair_first_set")]
  public static extern void OffsetPair_first_set(HandleRef jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_OffsetPair_first_get")]
  public static extern uint OffsetPair_first_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_OffsetPair_second_set")]
  public static extern void OffsetPair_second_set(HandleRef jarg1, double jarg2);

  [DllImport("cola", EntryPoint="CSharp_OffsetPair_second_get")]
  public static extern double OffsetPair_second_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_delete_OffsetPair")]
  public static extern void delete_OffsetPair(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_OffsetList_Clear")]
  public static extern void OffsetList_Clear(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_OffsetList_Add")]
  public static extern void OffsetList_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_OffsetList_size")]
  public static extern uint OffsetList_size(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_OffsetList_capacity")]
  public static extern uint OffsetList_capacity(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_OffsetList_reserve")]
  public static extern void OffsetList_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_new_OffsetList__SWIG_0")]
  public static extern IntPtr new_OffsetList__SWIG_0();

  [DllImport("cola", EntryPoint="CSharp_new_OffsetList__SWIG_1")]
  public static extern IntPtr new_OffsetList__SWIG_1(int jarg1);

  [DllImport("cola", EntryPoint="CSharp_OffsetList_getitemcopy")]
  public static extern IntPtr OffsetList_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_OffsetList_getitem")]
  public static extern IntPtr OffsetList_getitem(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_OffsetList_setitem")]
  public static extern void OffsetList_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_OffsetList_AddRange")]
  public static extern void OffsetList_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_OffsetList_GetRange")]
  public static extern IntPtr OffsetList_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_OffsetList_Insert")]
  public static extern void OffsetList_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_OffsetList_InsertRange")]
  public static extern void OffsetList_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_OffsetList_RemoveAt")]
  public static extern void OffsetList_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_OffsetList_RemoveRange")]
  public static extern void OffsetList_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_OffsetList_Repeat")]
  public static extern IntPtr OffsetList_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_OffsetList_Reverse__SWIG_0")]
  public static extern void OffsetList_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_OffsetList_Reverse__SWIG_1")]
  public static extern void OffsetList_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_OffsetList_SetRange")]
  public static extern void OffsetList_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_delete_OffsetList")]
  public static extern void delete_OffsetList(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_RectPtrVector_Clear")]
  public static extern void RectPtrVector_Clear(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_RectPtrVector_Add")]
  public static extern void RectPtrVector_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_RectPtrVector_size")]
  public static extern uint RectPtrVector_size(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_RectPtrVector_capacity")]
  public static extern uint RectPtrVector_capacity(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_RectPtrVector_reserve")]
  public static extern void RectPtrVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_new_RectPtrVector__SWIG_0")]
  public static extern IntPtr new_RectPtrVector__SWIG_0();

  [DllImport("cola", EntryPoint="CSharp_new_RectPtrVector__SWIG_1")]
  public static extern IntPtr new_RectPtrVector__SWIG_1(int jarg1);

  [DllImport("cola", EntryPoint="CSharp_RectPtrVector_getitemcopy")]
  public static extern IntPtr RectPtrVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_RectPtrVector_getitem")]
  public static extern IntPtr RectPtrVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_RectPtrVector_setitem")]
  public static extern void RectPtrVector_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_RectPtrVector_AddRange")]
  public static extern void RectPtrVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_RectPtrVector_GetRange")]
  public static extern IntPtr RectPtrVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_RectPtrVector_Insert")]
  public static extern void RectPtrVector_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_RectPtrVector_InsertRange")]
  public static extern void RectPtrVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_RectPtrVector_RemoveAt")]
  public static extern void RectPtrVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_RectPtrVector_RemoveRange")]
  public static extern void RectPtrVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_RectPtrVector_Repeat")]
  public static extern IntPtr RectPtrVector_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_RectPtrVector_Reverse__SWIG_0")]
  public static extern void RectPtrVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_RectPtrVector_Reverse__SWIG_1")]
  public static extern void RectPtrVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_RectPtrVector_SetRange")]
  public static extern void RectPtrVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_delete_RectPtrVector")]
  public static extern void delete_RectPtrVector(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_CompoundConstraintsVector_Clear")]
  public static extern void CompoundConstraintsVector_Clear(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_CompoundConstraintsVector_Add")]
  public static extern void CompoundConstraintsVector_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_CompoundConstraintsVector_size")]
  public static extern uint CompoundConstraintsVector_size(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_CompoundConstraintsVector_capacity")]
  public static extern uint CompoundConstraintsVector_capacity(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_CompoundConstraintsVector_reserve")]
  public static extern void CompoundConstraintsVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_new_CompoundConstraintsVector__SWIG_0")]
  public static extern IntPtr new_CompoundConstraintsVector__SWIG_0();

  [DllImport("cola", EntryPoint="CSharp_new_CompoundConstraintsVector__SWIG_1")]
  public static extern IntPtr new_CompoundConstraintsVector__SWIG_1(int jarg1);

  [DllImport("cola", EntryPoint="CSharp_CompoundConstraintsVector_getitemcopy")]
  public static extern IntPtr CompoundConstraintsVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_CompoundConstraintsVector_getitem")]
  public static extern IntPtr CompoundConstraintsVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_CompoundConstraintsVector_setitem")]
  public static extern void CompoundConstraintsVector_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_CompoundConstraintsVector_AddRange")]
  public static extern void CompoundConstraintsVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_CompoundConstraintsVector_GetRange")]
  public static extern IntPtr CompoundConstraintsVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_CompoundConstraintsVector_Insert")]
  public static extern void CompoundConstraintsVector_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_CompoundConstraintsVector_InsertRange")]
  public static extern void CompoundConstraintsVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_CompoundConstraintsVector_RemoveAt")]
  public static extern void CompoundConstraintsVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_CompoundConstraintsVector_RemoveRange")]
  public static extern void CompoundConstraintsVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_CompoundConstraintsVector_Repeat")]
  public static extern IntPtr CompoundConstraintsVector_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_CompoundConstraintsVector_Reverse__SWIG_0")]
  public static extern void CompoundConstraintsVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_CompoundConstraintsVector_Reverse__SWIG_1")]
  public static extern void CompoundConstraintsVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_CompoundConstraintsVector_SetRange")]
  public static extern void CompoundConstraintsVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_delete_CompoundConstraintsVector")]
  public static extern void delete_CompoundConstraintsVector(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_ColaLocks_Clear")]
  public static extern void ColaLocks_Clear(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_ColaLocks_Add")]
  public static extern void ColaLocks_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_ColaLocks_size")]
  public static extern uint ColaLocks_size(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_ColaLocks_capacity")]
  public static extern uint ColaLocks_capacity(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_ColaLocks_reserve")]
  public static extern void ColaLocks_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_new_ColaLocks__SWIG_0")]
  public static extern IntPtr new_ColaLocks__SWIG_0();

  [DllImport("cola", EntryPoint="CSharp_new_ColaLocks__SWIG_1")]
  public static extern IntPtr new_ColaLocks__SWIG_1(int jarg1);

  [DllImport("cola", EntryPoint="CSharp_ColaLocks_getitemcopy")]
  public static extern IntPtr ColaLocks_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_ColaLocks_getitem")]
  public static extern IntPtr ColaLocks_getitem(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_ColaLocks_setitem")]
  public static extern void ColaLocks_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_ColaLocks_AddRange")]
  public static extern void ColaLocks_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_ColaLocks_GetRange")]
  public static extern IntPtr ColaLocks_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_ColaLocks_Insert")]
  public static extern void ColaLocks_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_ColaLocks_InsertRange")]
  public static extern void ColaLocks_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_ColaLocks_RemoveAt")]
  public static extern void ColaLocks_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_ColaLocks_RemoveRange")]
  public static extern void ColaLocks_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_ColaLocks_Repeat")]
  public static extern IntPtr ColaLocks_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_ColaLocks_Reverse__SWIG_0")]
  public static extern void ColaLocks_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_ColaLocks_Reverse__SWIG_1")]
  public static extern void ColaLocks_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_ColaLocks_SetRange")]
  public static extern void ColaLocks_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_delete_ColaLocks")]
  public static extern void delete_ColaLocks(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_ColaResizes_Clear")]
  public static extern void ColaResizes_Clear(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_ColaResizes_Add")]
  public static extern void ColaResizes_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_ColaResizes_size")]
  public static extern uint ColaResizes_size(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_ColaResizes_capacity")]
  public static extern uint ColaResizes_capacity(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_ColaResizes_reserve")]
  public static extern void ColaResizes_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_new_ColaResizes__SWIG_0")]
  public static extern IntPtr new_ColaResizes__SWIG_0();

  [DllImport("cola", EntryPoint="CSharp_new_ColaResizes__SWIG_1")]
  public static extern IntPtr new_ColaResizes__SWIG_1(int jarg1);

  [DllImport("cola", EntryPoint="CSharp_ColaResizes_getitemcopy")]
  public static extern IntPtr ColaResizes_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_ColaResizes_getitem")]
  public static extern IntPtr ColaResizes_getitem(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_ColaResizes_setitem")]
  public static extern void ColaResizes_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_ColaResizes_AddRange")]
  public static extern void ColaResizes_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_ColaResizes_GetRange")]
  public static extern IntPtr ColaResizes_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_ColaResizes_Insert")]
  public static extern void ColaResizes_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_ColaResizes_InsertRange")]
  public static extern void ColaResizes_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_ColaResizes_RemoveAt")]
  public static extern void ColaResizes_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_ColaResizes_RemoveRange")]
  public static extern void ColaResizes_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_ColaResizes_Repeat")]
  public static extern IntPtr ColaResizes_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_ColaResizes_Reverse__SWIG_0")]
  public static extern void ColaResizes_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_ColaResizes_Reverse__SWIG_1")]
  public static extern void ColaResizes_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_ColaResizes_SetRange")]
  public static extern void ColaResizes_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_delete_ColaResizes")]
  public static extern void delete_ColaResizes(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointPtrVector_Clear")]
  public static extern void TopologyEdgePointPtrVector_Clear(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointPtrVector_Add")]
  public static extern void TopologyEdgePointPtrVector_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointPtrVector_size")]
  public static extern uint TopologyEdgePointPtrVector_size(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointPtrVector_capacity")]
  public static extern uint TopologyEdgePointPtrVector_capacity(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointPtrVector_reserve")]
  public static extern void TopologyEdgePointPtrVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_new_TopologyEdgePointPtrVector__SWIG_0")]
  public static extern IntPtr new_TopologyEdgePointPtrVector__SWIG_0();

  [DllImport("cola", EntryPoint="CSharp_new_TopologyEdgePointPtrVector__SWIG_1")]
  public static extern IntPtr new_TopologyEdgePointPtrVector__SWIG_1(int jarg1);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointPtrVector_getitemcopy")]
  public static extern IntPtr TopologyEdgePointPtrVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointPtrVector_getitem")]
  public static extern IntPtr TopologyEdgePointPtrVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointPtrVector_setitem")]
  public static extern void TopologyEdgePointPtrVector_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointPtrVector_AddRange")]
  public static extern void TopologyEdgePointPtrVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointPtrVector_GetRange")]
  public static extern IntPtr TopologyEdgePointPtrVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointPtrVector_Insert")]
  public static extern void TopologyEdgePointPtrVector_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointPtrVector_InsertRange")]
  public static extern void TopologyEdgePointPtrVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointPtrVector_RemoveAt")]
  public static extern void TopologyEdgePointPtrVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointPtrVector_RemoveRange")]
  public static extern void TopologyEdgePointPtrVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointPtrVector_Repeat")]
  public static extern IntPtr TopologyEdgePointPtrVector_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointPtrVector_Reverse__SWIG_0")]
  public static extern void TopologyEdgePointPtrVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointPtrVector_Reverse__SWIG_1")]
  public static extern void TopologyEdgePointPtrVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointPtrVector_SetRange")]
  public static extern void TopologyEdgePointPtrVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_delete_TopologyEdgePointPtrVector")]
  public static extern void delete_TopologyEdgePointPtrVector(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointConstPtrVector_Clear")]
  public static extern void TopologyEdgePointConstPtrVector_Clear(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointConstPtrVector_Add")]
  public static extern void TopologyEdgePointConstPtrVector_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointConstPtrVector_size")]
  public static extern uint TopologyEdgePointConstPtrVector_size(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointConstPtrVector_capacity")]
  public static extern uint TopologyEdgePointConstPtrVector_capacity(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointConstPtrVector_reserve")]
  public static extern void TopologyEdgePointConstPtrVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_new_TopologyEdgePointConstPtrVector__SWIG_0")]
  public static extern IntPtr new_TopologyEdgePointConstPtrVector__SWIG_0();

  [DllImport("cola", EntryPoint="CSharp_new_TopologyEdgePointConstPtrVector__SWIG_1")]
  public static extern IntPtr new_TopologyEdgePointConstPtrVector__SWIG_1(int jarg1);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointConstPtrVector_getitemcopy")]
  public static extern IntPtr TopologyEdgePointConstPtrVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointConstPtrVector_getitem")]
  public static extern IntPtr TopologyEdgePointConstPtrVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointConstPtrVector_setitem")]
  public static extern void TopologyEdgePointConstPtrVector_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointConstPtrVector_AddRange")]
  public static extern void TopologyEdgePointConstPtrVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointConstPtrVector_GetRange")]
  public static extern IntPtr TopologyEdgePointConstPtrVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointConstPtrVector_Insert")]
  public static extern void TopologyEdgePointConstPtrVector_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointConstPtrVector_InsertRange")]
  public static extern void TopologyEdgePointConstPtrVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointConstPtrVector_RemoveAt")]
  public static extern void TopologyEdgePointConstPtrVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointConstPtrVector_RemoveRange")]
  public static extern void TopologyEdgePointConstPtrVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointConstPtrVector_Repeat")]
  public static extern IntPtr TopologyEdgePointConstPtrVector_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointConstPtrVector_Reverse__SWIG_0")]
  public static extern void TopologyEdgePointConstPtrVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointConstPtrVector_Reverse__SWIG_1")]
  public static extern void TopologyEdgePointConstPtrVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePointConstPtrVector_SetRange")]
  public static extern void TopologyEdgePointConstPtrVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_delete_TopologyEdgePointConstPtrVector")]
  public static extern void delete_TopologyEdgePointConstPtrVector(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePtrVector_Clear")]
  public static extern void TopologyEdgePtrVector_Clear(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePtrVector_Add")]
  public static extern void TopologyEdgePtrVector_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePtrVector_size")]
  public static extern uint TopologyEdgePtrVector_size(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePtrVector_capacity")]
  public static extern uint TopologyEdgePtrVector_capacity(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePtrVector_reserve")]
  public static extern void TopologyEdgePtrVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_new_TopologyEdgePtrVector__SWIG_0")]
  public static extern IntPtr new_TopologyEdgePtrVector__SWIG_0();

  [DllImport("cola", EntryPoint="CSharp_new_TopologyEdgePtrVector__SWIG_1")]
  public static extern IntPtr new_TopologyEdgePtrVector__SWIG_1(int jarg1);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePtrVector_getitemcopy")]
  public static extern IntPtr TopologyEdgePtrVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePtrVector_getitem")]
  public static extern IntPtr TopologyEdgePtrVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePtrVector_setitem")]
  public static extern void TopologyEdgePtrVector_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePtrVector_AddRange")]
  public static extern void TopologyEdgePtrVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePtrVector_GetRange")]
  public static extern IntPtr TopologyEdgePtrVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePtrVector_Insert")]
  public static extern void TopologyEdgePtrVector_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePtrVector_InsertRange")]
  public static extern void TopologyEdgePtrVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePtrVector_RemoveAt")]
  public static extern void TopologyEdgePtrVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePtrVector_RemoveRange")]
  public static extern void TopologyEdgePtrVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePtrVector_Repeat")]
  public static extern IntPtr TopologyEdgePtrVector_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePtrVector_Reverse__SWIG_0")]
  public static extern void TopologyEdgePtrVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePtrVector_Reverse__SWIG_1")]
  public static extern void TopologyEdgePtrVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_TopologyEdgePtrVector_SetRange")]
  public static extern void TopologyEdgePtrVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_delete_TopologyEdgePtrVector")]
  public static extern void delete_TopologyEdgePtrVector(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_TopologyNodePtrVector_Clear")]
  public static extern void TopologyNodePtrVector_Clear(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_TopologyNodePtrVector_Add")]
  public static extern void TopologyNodePtrVector_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_TopologyNodePtrVector_size")]
  public static extern uint TopologyNodePtrVector_size(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_TopologyNodePtrVector_capacity")]
  public static extern uint TopologyNodePtrVector_capacity(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_TopologyNodePtrVector_reserve")]
  public static extern void TopologyNodePtrVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_new_TopologyNodePtrVector__SWIG_0")]
  public static extern IntPtr new_TopologyNodePtrVector__SWIG_0();

  [DllImport("cola", EntryPoint="CSharp_new_TopologyNodePtrVector__SWIG_1")]
  public static extern IntPtr new_TopologyNodePtrVector__SWIG_1(int jarg1);

  [DllImport("cola", EntryPoint="CSharp_TopologyNodePtrVector_getitemcopy")]
  public static extern IntPtr TopologyNodePtrVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_TopologyNodePtrVector_getitem")]
  public static extern IntPtr TopologyNodePtrVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_TopologyNodePtrVector_setitem")]
  public static extern void TopologyNodePtrVector_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_TopologyNodePtrVector_AddRange")]
  public static extern void TopologyNodePtrVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_TopologyNodePtrVector_GetRange")]
  public static extern IntPtr TopologyNodePtrVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_TopologyNodePtrVector_Insert")]
  public static extern void TopologyNodePtrVector_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_TopologyNodePtrVector_InsertRange")]
  public static extern void TopologyNodePtrVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_TopologyNodePtrVector_RemoveAt")]
  public static extern void TopologyNodePtrVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_TopologyNodePtrVector_RemoveRange")]
  public static extern void TopologyNodePtrVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_TopologyNodePtrVector_Repeat")]
  public static extern IntPtr TopologyNodePtrVector_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_TopologyNodePtrVector_Reverse__SWIG_0")]
  public static extern void TopologyNodePtrVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_TopologyNodePtrVector_Reverse__SWIG_1")]
  public static extern void TopologyNodePtrVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_TopologyNodePtrVector_SetRange")]
  public static extern void TopologyNodePtrVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_delete_TopologyNodePtrVector")]
  public static extern void delete_TopologyNodePtrVector(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_UnsignedVector_Clear")]
  public static extern void UnsignedVector_Clear(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_UnsignedVector_Add")]
  public static extern void UnsignedVector_Add(HandleRef jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_UnsignedVector_size")]
  public static extern uint UnsignedVector_size(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_UnsignedVector_capacity")]
  public static extern uint UnsignedVector_capacity(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_UnsignedVector_reserve")]
  public static extern void UnsignedVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_new_UnsignedVector__SWIG_0")]
  public static extern IntPtr new_UnsignedVector__SWIG_0();

  [DllImport("cola", EntryPoint="CSharp_new_UnsignedVector__SWIG_1")]
  public static extern IntPtr new_UnsignedVector__SWIG_1(int jarg1);

  [DllImport("cola", EntryPoint="CSharp_UnsignedVector_getitemcopy")]
  public static extern uint UnsignedVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_UnsignedVector_getitem")]
  public static extern uint UnsignedVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_UnsignedVector_setitem")]
  public static extern void UnsignedVector_setitem(HandleRef jarg1, int jarg2, uint jarg3);

  [DllImport("cola", EntryPoint="CSharp_UnsignedVector_AddRange")]
  public static extern void UnsignedVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_UnsignedVector_GetRange")]
  public static extern IntPtr UnsignedVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_UnsignedVector_Insert")]
  public static extern void UnsignedVector_Insert(HandleRef jarg1, int jarg2, uint jarg3);

  [DllImport("cola", EntryPoint="CSharp_UnsignedVector_InsertRange")]
  public static extern void UnsignedVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_UnsignedVector_RemoveAt")]
  public static extern void UnsignedVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_UnsignedVector_RemoveRange")]
  public static extern void UnsignedVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_UnsignedVector_Repeat")]
  public static extern IntPtr UnsignedVector_Repeat(uint jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_UnsignedVector_Reverse__SWIG_0")]
  public static extern void UnsignedVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_UnsignedVector_Reverse__SWIG_1")]
  public static extern void UnsignedVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_UnsignedVector_SetRange")]
  public static extern void UnsignedVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_UnsignedVector_Contains")]
  public static extern bool UnsignedVector_Contains(HandleRef jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_UnsignedVector_IndexOf")]
  public static extern int UnsignedVector_IndexOf(HandleRef jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_UnsignedVector_LastIndexOf")]
  public static extern int UnsignedVector_LastIndexOf(HandleRef jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_UnsignedVector_Remove")]
  public static extern void UnsignedVector_Remove(HandleRef jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_delete_UnsignedVector")]
  public static extern void delete_UnsignedVector(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_ClusterVector_Clear")]
  public static extern void ClusterVector_Clear(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_ClusterVector_Add")]
  public static extern void ClusterVector_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_ClusterVector_size")]
  public static extern uint ClusterVector_size(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_ClusterVector_capacity")]
  public static extern uint ClusterVector_capacity(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_ClusterVector_reserve")]
  public static extern void ClusterVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_new_ClusterVector__SWIG_0")]
  public static extern IntPtr new_ClusterVector__SWIG_0();

  [DllImport("cola", EntryPoint="CSharp_new_ClusterVector__SWIG_1")]
  public static extern IntPtr new_ClusterVector__SWIG_1(int jarg1);

  [DllImport("cola", EntryPoint="CSharp_ClusterVector_getitemcopy")]
  public static extern IntPtr ClusterVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_ClusterVector_getitem")]
  public static extern IntPtr ClusterVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_ClusterVector_setitem")]
  public static extern void ClusterVector_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_ClusterVector_AddRange")]
  public static extern void ClusterVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_ClusterVector_GetRange")]
  public static extern IntPtr ClusterVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_ClusterVector_Insert")]
  public static extern void ClusterVector_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_ClusterVector_InsertRange")]
  public static extern void ClusterVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_ClusterVector_RemoveAt")]
  public static extern void ClusterVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_ClusterVector_RemoveRange")]
  public static extern void ClusterVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_ClusterVector_Repeat")]
  public static extern IntPtr ClusterVector_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_ClusterVector_Reverse__SWIG_0")]
  public static extern void ClusterVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_ClusterVector_Reverse__SWIG_1")]
  public static extern void ClusterVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_ClusterVector_SetRange")]
  public static extern void ClusterVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_delete_ClusterVector")]
  public static extern void delete_ClusterVector(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_conjugate")]
  public static extern int conjugate(int jarg1);

  [DllImport("cola", EntryPoint="CSharp_RectangleIntersections_intersects_set")]
  public static extern void RectangleIntersections_intersects_set(HandleRef jarg1, bool jarg2);

  [DllImport("cola", EntryPoint="CSharp_RectangleIntersections_intersects_get")]
  public static extern bool RectangleIntersections_intersects_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_RectangleIntersections_top_set")]
  public static extern void RectangleIntersections_top_set(HandleRef jarg1, bool jarg2);

  [DllImport("cola", EntryPoint="CSharp_RectangleIntersections_top_get")]
  public static extern bool RectangleIntersections_top_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_RectangleIntersections_bottom_set")]
  public static extern void RectangleIntersections_bottom_set(HandleRef jarg1, bool jarg2);

  [DllImport("cola", EntryPoint="CSharp_RectangleIntersections_bottom_get")]
  public static extern bool RectangleIntersections_bottom_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_RectangleIntersections_left_set")]
  public static extern void RectangleIntersections_left_set(HandleRef jarg1, bool jarg2);

  [DllImport("cola", EntryPoint="CSharp_RectangleIntersections_left_get")]
  public static extern bool RectangleIntersections_left_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_RectangleIntersections_right_set")]
  public static extern void RectangleIntersections_right_set(HandleRef jarg1, bool jarg2);

  [DllImport("cola", EntryPoint="CSharp_RectangleIntersections_right_get")]
  public static extern bool RectangleIntersections_right_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_RectangleIntersections_topX_set")]
  public static extern void RectangleIntersections_topX_set(HandleRef jarg1, double jarg2);

  [DllImport("cola", EntryPoint="CSharp_RectangleIntersections_topX_get")]
  public static extern double RectangleIntersections_topX_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_RectangleIntersections_topY_set")]
  public static extern void RectangleIntersections_topY_set(HandleRef jarg1, double jarg2);

  [DllImport("cola", EntryPoint="CSharp_RectangleIntersections_topY_get")]
  public static extern double RectangleIntersections_topY_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_RectangleIntersections_bottomX_set")]
  public static extern void RectangleIntersections_bottomX_set(HandleRef jarg1, double jarg2);

  [DllImport("cola", EntryPoint="CSharp_RectangleIntersections_bottomX_get")]
  public static extern double RectangleIntersections_bottomX_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_RectangleIntersections_bottomY_set")]
  public static extern void RectangleIntersections_bottomY_set(HandleRef jarg1, double jarg2);

  [DllImport("cola", EntryPoint="CSharp_RectangleIntersections_bottomY_get")]
  public static extern double RectangleIntersections_bottomY_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_RectangleIntersections_leftX_set")]
  public static extern void RectangleIntersections_leftX_set(HandleRef jarg1, double jarg2);

  [DllImport("cola", EntryPoint="CSharp_RectangleIntersections_leftX_get")]
  public static extern double RectangleIntersections_leftX_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_RectangleIntersections_leftY_set")]
  public static extern void RectangleIntersections_leftY_set(HandleRef jarg1, double jarg2);

  [DllImport("cola", EntryPoint="CSharp_RectangleIntersections_leftY_get")]
  public static extern double RectangleIntersections_leftY_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_RectangleIntersections_rightX_set")]
  public static extern void RectangleIntersections_rightX_set(HandleRef jarg1, double jarg2);

  [DllImport("cola", EntryPoint="CSharp_RectangleIntersections_rightX_get")]
  public static extern double RectangleIntersections_rightX_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_RectangleIntersections_rightY_set")]
  public static extern void RectangleIntersections_rightY_set(HandleRef jarg1, double jarg2);

  [DllImport("cola", EntryPoint="CSharp_RectangleIntersections_rightY_get")]
  public static extern double RectangleIntersections_rightY_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_new_RectangleIntersections")]
  public static extern IntPtr new_RectangleIntersections();

  [DllImport("cola", EntryPoint="CSharp_RectangleIntersections_countIntersections")]
  public static extern int RectangleIntersections_countIntersections(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_RectangleIntersections_print")]
  public static extern void RectangleIntersections_print(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_RectangleIntersections_nearest")]
  public static extern void RectangleIntersections_nearest(HandleRef jarg1, double jarg2, double jarg3, HandleRef jarg4, HandleRef jarg5);

  [DllImport("cola", EntryPoint="CSharp_delete_RectangleIntersections")]
  public static extern void delete_RectangleIntersections(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_Rectangle_xBorder_set")]
  public static extern void Rectangle_xBorder_set(double jarg1);

  [DllImport("cola", EntryPoint="CSharp_Rectangle_xBorder_get")]
  public static extern double Rectangle_xBorder_get();

  [DllImport("cola", EntryPoint="CSharp_Rectangle_yBorder_set")]
  public static extern void Rectangle_yBorder_set(double jarg1);

  [DllImport("cola", EntryPoint="CSharp_Rectangle_yBorder_get")]
  public static extern double Rectangle_yBorder_get();

  [DllImport("cola", EntryPoint="CSharp_new_Rectangle__SWIG_0")]
  public static extern IntPtr new_Rectangle__SWIG_0(double jarg1, double jarg2, double jarg3, double jarg4, bool jarg5);

  [DllImport("cola", EntryPoint="CSharp_new_Rectangle__SWIG_1")]
  public static extern IntPtr new_Rectangle__SWIG_1(double jarg1, double jarg2, double jarg3, double jarg4);

  [DllImport("cola", EntryPoint="CSharp_new_Rectangle__SWIG_2")]
  public static extern IntPtr new_Rectangle__SWIG_2(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_new_Rectangle__SWIG_3")]
  public static extern IntPtr new_Rectangle__SWIG_3();

  [DllImport("cola", EntryPoint="CSharp_Rectangle_reset")]
  public static extern void Rectangle_reset(HandleRef jarg1, uint jarg2, double jarg3, double jarg4);

  [DllImport("cola", EntryPoint="CSharp_Rectangle_getMaxX")]
  public static extern double Rectangle_getMaxX(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_Rectangle_getMaxY")]
  public static extern double Rectangle_getMaxY(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_Rectangle_getMinX")]
  public static extern double Rectangle_getMinX(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_Rectangle_getMinY")]
  public static extern double Rectangle_getMinY(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_Rectangle_getMinD")]
  public static extern double Rectangle_getMinD(HandleRef jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_Rectangle_getMaxD")]
  public static extern double Rectangle_getMaxD(HandleRef jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_Rectangle_getCentreX")]
  public static extern double Rectangle_getCentreX(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_Rectangle_getCentreY")]
  public static extern double Rectangle_getCentreY(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_Rectangle_getCentreD")]
  public static extern double Rectangle_getCentreD(HandleRef jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_Rectangle_width")]
  public static extern double Rectangle_width(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_Rectangle_height")]
  public static extern double Rectangle_height(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_Rectangle_length")]
  public static extern double Rectangle_length(HandleRef jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_Rectangle_set_width")]
  public static extern void Rectangle_set_width(HandleRef jarg1, double jarg2);

  [DllImport("cola", EntryPoint="CSharp_Rectangle_set_height")]
  public static extern void Rectangle_set_height(HandleRef jarg1, double jarg2);

  [DllImport("cola", EntryPoint="CSharp_Rectangle_moveCentreD")]
  public static extern void Rectangle_moveCentreD(HandleRef jarg1, uint jarg2, double jarg3);

  [DllImport("cola", EntryPoint="CSharp_Rectangle_moveCentreX")]
  public static extern void Rectangle_moveCentreX(HandleRef jarg1, double jarg2);

  [DllImport("cola", EntryPoint="CSharp_Rectangle_moveCentreY")]
  public static extern void Rectangle_moveCentreY(HandleRef jarg1, double jarg2);

  [DllImport("cola", EntryPoint="CSharp_Rectangle_moveCentre")]
  public static extern void Rectangle_moveCentre(HandleRef jarg1, double jarg2, double jarg3);

  [DllImport("cola", EntryPoint="CSharp_Rectangle_moveMinX")]
  public static extern void Rectangle_moveMinX(HandleRef jarg1, double jarg2);

  [DllImport("cola", EntryPoint="CSharp_Rectangle_moveMinY")]
  public static extern void Rectangle_moveMinY(HandleRef jarg1, double jarg2);

  [DllImport("cola", EntryPoint="CSharp_Rectangle_overlapD")]
  public static extern double Rectangle_overlapD(HandleRef jarg1, uint jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_Rectangle_overlapX")]
  public static extern double Rectangle_overlapX(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_Rectangle_overlapY")]
  public static extern double Rectangle_overlapY(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_Rectangle_allowOverlap")]
  public static extern bool Rectangle_allowOverlap(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_Rectangle_offset")]
  public static extern void Rectangle_offset(HandleRef jarg1, double jarg2, double jarg3);

  [DllImport("cola", EntryPoint="CSharp_Rectangle_lineIntersections")]
  public static extern void Rectangle_lineIntersections(HandleRef jarg1, double jarg2, double jarg3, double jarg4, double jarg5, HandleRef jarg6);

  [DllImport("cola", EntryPoint="CSharp_Rectangle_inside")]
  public static extern bool Rectangle_inside(HandleRef jarg1, double jarg2, double jarg3);

  [DllImport("cola", EntryPoint="CSharp_Rectangle_overlaps")]
  public static extern bool Rectangle_overlaps(HandleRef jarg1, double jarg2, double jarg3, double jarg4, double jarg5);

  [DllImport("cola", EntryPoint="CSharp_Rectangle_routeAround")]
  public static extern void Rectangle_routeAround(HandleRef jarg1, double jarg2, double jarg3, double jarg4, double jarg5, HandleRef jarg6, HandleRef jarg7);

  [DllImport("cola", EntryPoint="CSharp_delete_Rectangle")]
  public static extern void delete_Rectangle(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_generateXConstraints")]
  public static extern void generateXConstraints(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4);

  [DllImport("cola", EntryPoint="CSharp_generateYConstraints")]
  public static extern void generateYConstraints(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_removeoverlaps__SWIG_0")]
  public static extern void removeoverlaps__SWIG_0(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_removeoverlaps__SWIG_1")]
  public static extern void removeoverlaps__SWIG_1(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("cola", EntryPoint="CSharp_removeoverlaps__SWIG_2")]
  public static extern void removeoverlaps__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_new_delete_object")]
  public static extern IntPtr new_delete_object();

  [DllImport("cola", EntryPoint="CSharp_delete_delete_object")]
  public static extern void delete_delete_object(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_new_Lock__SWIG_0")]
  public static extern IntPtr new_Lock__SWIG_0();

  [DllImport("cola", EntryPoint="CSharp_new_Lock__SWIG_1")]
  public static extern IntPtr new_Lock__SWIG_1(uint jarg1, double jarg2, double jarg3);

  [DllImport("cola", EntryPoint="CSharp_Lock_getID")]
  public static extern uint Lock_getID(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_Lock_pos")]
  public static extern double Lock_pos(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_delete_Lock")]
  public static extern void delete_Lock(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_new_Resize")]
  public static extern IntPtr new_Resize(uint jarg1, double jarg2, double jarg3, double jarg4, double jarg5);

  [DllImport("cola", EntryPoint="CSharp_Resize_getID")]
  public static extern uint Resize_getID(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_Resize_getTarget")]
  public static extern IntPtr Resize_getTarget(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_delete_Resize")]
  public static extern void delete_Resize(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_new_PreIteration__SWIG_0")]
  public static extern IntPtr new_PreIteration__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_new_PreIteration__SWIG_1")]
  public static extern IntPtr new_PreIteration__SWIG_1(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_new_PreIteration__SWIG_2")]
  public static extern IntPtr new_PreIteration__SWIG_2();

  [DllImport("cola", EntryPoint="CSharp_new_PreIteration__SWIG_3")]
  public static extern IntPtr new_PreIteration__SWIG_3(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_delete_PreIteration")]
  public static extern void delete_PreIteration(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_PreIteration_locks_set")]
  public static extern void PreIteration_locks_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_PreIteration_locks_get")]
  public static extern IntPtr PreIteration_locks_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_PreIteration_resizes_set")]
  public static extern void PreIteration_resizes_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_PreIteration_resizes_get")]
  public static extern IntPtr PreIteration_resizes_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_PreIteration_changed_set")]
  public static extern void PreIteration_changed_set(HandleRef jarg1, bool jarg2);

  [DllImport("cola", EntryPoint="CSharp_PreIteration_changed_get")]
  public static extern bool PreIteration_changed_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_TestConvergence_old_stress_set")]
  public static extern void TestConvergence_old_stress_set(HandleRef jarg1, double jarg2);

  [DllImport("cola", EntryPoint="CSharp_TestConvergence_old_stress_get")]
  public static extern double TestConvergence_old_stress_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_new_TestConvergence__SWIG_0")]
  public static extern IntPtr new_TestConvergence__SWIG_0(double jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_new_TestConvergence__SWIG_1")]
  public static extern IntPtr new_TestConvergence__SWIG_1(double jarg1);

  [DllImport("cola", EntryPoint="CSharp_new_TestConvergence__SWIG_2")]
  public static extern IntPtr new_TestConvergence__SWIG_2();

  [DllImport("cola", EntryPoint="CSharp_delete_TestConvergence")]
  public static extern void delete_TestConvergence(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_TestConvergence_testoperator")]
  public static extern bool TestConvergence_testoperator(HandleRef jarg1, double jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("cola", EntryPoint="CSharp_TestConvergence_reset")]
  public static extern void TestConvergence_reset(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_TestConvergence_tolerance_get")]
  public static extern double TestConvergence_tolerance_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_TestConvergence_maxiterations_get")]
  public static extern uint TestConvergence_maxiterations_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_TestConvergence_iterations_set")]
  public static extern void TestConvergence_iterations_set(HandleRef jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_TestConvergence_iterations_get")]
  public static extern uint TestConvergence_iterations_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_defaultTest_get")]
  public static extern IntPtr defaultTest_get();

  [DllImport("cola", EntryPoint="CSharp_new_ConstrainedMajorizationLayout__SWIG_0")]
  public static extern IntPtr new_ConstrainedMajorizationLayout__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, double jarg4, HandleRef jarg5, HandleRef jarg6, HandleRef jarg7);

  [DllImport("cola", EntryPoint="CSharp_new_ConstrainedMajorizationLayout__SWIG_1")]
  public static extern IntPtr new_ConstrainedMajorizationLayout__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, double jarg4, HandleRef jarg5, HandleRef jarg6);

  [DllImport("cola", EntryPoint="CSharp_new_ConstrainedMajorizationLayout__SWIG_2")]
  public static extern IntPtr new_ConstrainedMajorizationLayout__SWIG_2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, double jarg4, HandleRef jarg5);

  [DllImport("cola", EntryPoint="CSharp_new_ConstrainedMajorizationLayout__SWIG_3")]
  public static extern IntPtr new_ConstrainedMajorizationLayout__SWIG_3(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, double jarg4);

  [DllImport("cola", EntryPoint="CSharp_ConstrainedMajorizationLayout_setXConstraints")]
  public static extern void ConstrainedMajorizationLayout_setXConstraints(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_ConstrainedMajorizationLayout_setYConstraints")]
  public static extern void ConstrainedMajorizationLayout_setYConstraints(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_ConstrainedMajorizationLayout_setUnsatisfiableConstraintInfo")]
  public static extern void ConstrainedMajorizationLayout_setUnsatisfiableConstraintInfo(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_ConstrainedMajorizationLayout_setStickyNodes")]
  public static extern void ConstrainedMajorizationLayout_setStickyNodes(HandleRef jarg1, double jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("cola", EntryPoint="CSharp_ConstrainedMajorizationLayout_setScaling")]
  public static extern void ConstrainedMajorizationLayout_setScaling(HandleRef jarg1, bool jarg2);

  [DllImport("cola", EntryPoint="CSharp_ConstrainedMajorizationLayout_setExternalSolver")]
  public static extern void ConstrainedMajorizationLayout_setExternalSolver(HandleRef jarg1, bool jarg2);

  [DllImport("cola", EntryPoint="CSharp_ConstrainedMajorizationLayout_setAvoidOverlaps__SWIG_0")]
  public static extern void ConstrainedMajorizationLayout_setAvoidOverlaps__SWIG_0(HandleRef jarg1, bool jarg2);

  [DllImport("cola", EntryPoint="CSharp_ConstrainedMajorizationLayout_setAvoidOverlaps__SWIG_1")]
  public static extern void ConstrainedMajorizationLayout_setAvoidOverlaps__SWIG_1(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_ConstrainedMajorizationLayout_setNonOverlappingClusters")]
  public static extern void ConstrainedMajorizationLayout_setNonOverlappingClusters(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_ConstrainedMajorizationLayout_setStraightenEdges__SWIG_0")]
  public static extern void ConstrainedMajorizationLayout_setStraightenEdges__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3, double jarg4, bool jarg5);

  [DllImport("cola", EntryPoint="CSharp_ConstrainedMajorizationLayout_setStraightenEdges__SWIG_1")]
  public static extern void ConstrainedMajorizationLayout_setStraightenEdges__SWIG_1(HandleRef jarg1, HandleRef jarg2, double jarg3, double jarg4);

  [DllImport("cola", EntryPoint="CSharp_ConstrainedMajorizationLayout_setStraightenEdges__SWIG_2")]
  public static extern void ConstrainedMajorizationLayout_setStraightenEdges__SWIG_2(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("cola", EntryPoint="CSharp_ConstrainedMajorizationLayout_setStraightenEdges__SWIG_3")]
  public static extern void ConstrainedMajorizationLayout_setStraightenEdges__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_ConstrainedMajorizationLayout_moveBoundingBoxes")]
  public static extern void ConstrainedMajorizationLayout_moveBoundingBoxes(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_delete_ConstrainedMajorizationLayout")]
  public static extern void delete_ConstrainedMajorizationLayout(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_ConstrainedMajorizationLayout_run__SWIG_0")]
  public static extern void ConstrainedMajorizationLayout_run__SWIG_0(HandleRef jarg1, bool jarg2, bool jarg3);

  [DllImport("cola", EntryPoint="CSharp_ConstrainedMajorizationLayout_run__SWIG_1")]
  public static extern void ConstrainedMajorizationLayout_run__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("cola", EntryPoint="CSharp_ConstrainedMajorizationLayout_run__SWIG_2")]
  public static extern void ConstrainedMajorizationLayout_run__SWIG_2(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_ConstrainedMajorizationLayout_straighten")]
  public static extern void ConstrainedMajorizationLayout_straighten(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("cola", EntryPoint="CSharp_ConstrainedMajorizationLayout_setConstrainedLayout")]
  public static extern void ConstrainedMajorizationLayout_setConstrainedLayout(HandleRef jarg1, bool jarg2);

  [DllImport("cola", EntryPoint="CSharp_bounds")]
  public static extern IntPtr bounds(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_new_ConstrainedFDLayout__SWIG_0")]
  public static extern IntPtr new_ConstrainedFDLayout__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6);

  [DllImport("cola", EntryPoint="CSharp_new_ConstrainedFDLayout__SWIG_1")]
  public static extern IntPtr new_ConstrainedFDLayout__SWIG_1(HandleRef jarg1, HandleRef jarg2, double jarg3, HandleRef jarg4, HandleRef jarg5);

  [DllImport("cola", EntryPoint="CSharp_new_ConstrainedFDLayout__SWIG_2")]
  public static extern IntPtr new_ConstrainedFDLayout__SWIG_2(HandleRef jarg1, HandleRef jarg2, double jarg3, HandleRef jarg4);

  [DllImport("cola", EntryPoint="CSharp_new_ConstrainedFDLayout__SWIG_3")]
  public static extern IntPtr new_ConstrainedFDLayout__SWIG_3(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("cola", EntryPoint="CSharp_ConstrainedFDLayout_run__SWIG_0")]
  public static extern void ConstrainedFDLayout_run__SWIG_0(HandleRef jarg1, bool jarg2, bool jarg3);

  [DllImport("cola", EntryPoint="CSharp_ConstrainedFDLayout_run__SWIG_1")]
  public static extern void ConstrainedFDLayout_run__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("cola", EntryPoint="CSharp_ConstrainedFDLayout_run__SWIG_2")]
  public static extern void ConstrainedFDLayout_run__SWIG_2(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_ConstrainedFDLayout_runOnce__SWIG_0")]
  public static extern void ConstrainedFDLayout_runOnce__SWIG_0(HandleRef jarg1, bool jarg2, bool jarg3);

  [DllImport("cola", EntryPoint="CSharp_ConstrainedFDLayout_runOnce__SWIG_1")]
  public static extern void ConstrainedFDLayout_runOnce__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("cola", EntryPoint="CSharp_ConstrainedFDLayout_runOnce__SWIG_2")]
  public static extern void ConstrainedFDLayout_runOnce__SWIG_2(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_ConstrainedFDLayout_setXConstraints")]
  public static extern void ConstrainedFDLayout_setXConstraints(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_ConstrainedFDLayout_setYConstraints")]
  public static extern void ConstrainedFDLayout_setYConstraints(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_ConstrainedFDLayout_setTopology")]
  public static extern void ConstrainedFDLayout_setTopology(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_ConstrainedFDLayout_setUnsatisfiableConstraintInfo")]
  public static extern void ConstrainedFDLayout_setUnsatisfiableConstraintInfo(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_delete_ConstrainedFDLayout")]
  public static extern void delete_ConstrainedFDLayout(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_ConstrainedFDLayout_computeStress")]
  public static extern double ConstrainedFDLayout_computeStress(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_removeClusterOverlapFast")]
  public static extern void removeClusterOverlapFast(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_Cluster_varWeight_set")]
  public static extern void Cluster_varWeight_set(HandleRef jarg1, double jarg2);

  [DllImport("cola", EntryPoint="CSharp_Cluster_varWeight_get")]
  public static extern double Cluster_varWeight_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_Cluster_internalEdgeWeightFactor_set")]
  public static extern void Cluster_internalEdgeWeightFactor_set(HandleRef jarg1, double jarg2);

  [DllImport("cola", EntryPoint="CSharp_Cluster_internalEdgeWeightFactor_get")]
  public static extern double Cluster_internalEdgeWeightFactor_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_Cluster_nodes_set")]
  public static extern void Cluster_nodes_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_Cluster_nodes_get")]
  public static extern IntPtr Cluster_nodes_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_Cluster_clusters_set")]
  public static extern void Cluster_clusters_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_Cluster_clusters_get")]
  public static extern IntPtr Cluster_clusters_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_Cluster_hullX_set")]
  public static extern void Cluster_hullX_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_Cluster_hullX_get")]
  public static extern IntPtr Cluster_hullX_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_Cluster_hullY_set")]
  public static extern void Cluster_hullY_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_Cluster_hullY_get")]
  public static extern IntPtr Cluster_hullY_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_delete_Cluster")]
  public static extern void delete_Cluster(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_Cluster_computeBoundary")]
  public static extern void Cluster_computeBoundary(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_Cluster_computeBoundingRect")]
  public static extern void Cluster_computeBoundingRect(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_Cluster_bounds_set")]
  public static extern void Cluster_bounds_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_Cluster_bounds_get")]
  public static extern IntPtr Cluster_bounds_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_Cluster_setDesiredBounds")]
  public static extern void Cluster_setDesiredBounds(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_Cluster_unsetDesiredBounds")]
  public static extern void Cluster_unsetDesiredBounds(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_Cluster_createVars")]
  public static extern void Cluster_createVars(HandleRef jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("cola", EntryPoint="CSharp_Cluster_vXMin_set")]
  public static extern void Cluster_vXMin_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_Cluster_vXMin_get")]
  public static extern IntPtr Cluster_vXMin_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_Cluster_vXMax_set")]
  public static extern void Cluster_vXMax_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_Cluster_vXMax_get")]
  public static extern IntPtr Cluster_vXMax_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_Cluster_vYMin_set")]
  public static extern void Cluster_vYMin_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_Cluster_vYMin_get")]
  public static extern IntPtr Cluster_vYMin_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_Cluster_vYMax_set")]
  public static extern void Cluster_vYMax_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_Cluster_vYMax_get")]
  public static extern IntPtr Cluster_vYMax_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_Cluster_generateNonOverlapConstraints")]
  public static extern void Cluster_generateNonOverlapConstraints(HandleRef jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6);

  [DllImport("cola", EntryPoint="CSharp_Cluster_clear")]
  public static extern void Cluster_clear(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_Cluster_area")]
  public static extern double Cluster_area(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_Cluster_updateBounds")]
  public static extern void Cluster_updateBounds(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_RectangularCluster_computeBoundary")]
  public static extern void RectangularCluster_computeBoundary(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_new_RectangularCluster")]
  public static extern IntPtr new_RectangularCluster();

  [DllImport("cola", EntryPoint="CSharp_delete_RectangularCluster")]
  public static extern void delete_RectangularCluster(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_RootCluster_computeBoundary")]
  public static extern void RootCluster_computeBoundary(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_new_RootCluster")]
  public static extern IntPtr new_RootCluster();

  [DllImport("cola", EntryPoint="CSharp_delete_RootCluster")]
  public static extern void delete_RootCluster(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_ConvexCluster_computeBoundary")]
  public static extern void ConvexCluster_computeBoundary(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_ConvexCluster_hullRIDs_set")]
  public static extern void ConvexCluster_hullRIDs_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_ConvexCluster_hullRIDs_get")]
  public static extern IntPtr ConvexCluster_hullRIDs_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_ConvexCluster_hullCorners_set")]
  public static extern void ConvexCluster_hullCorners_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_ConvexCluster_hullCorners_get")]
  public static extern IntPtr ConvexCluster_hullCorners_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_new_ConvexCluster")]
  public static extern IntPtr new_ConvexCluster();

  [DllImport("cola", EntryPoint="CSharp_delete_ConvexCluster")]
  public static extern void delete_ConvexCluster(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_CompoundConstraint_generateVariables")]
  public static extern void CompoundConstraint_generateVariables(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_CompoundConstraint_generateSeparationConstraints")]
  public static extern void CompoundConstraint_generateSeparationConstraints(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_CompoundConstraint_updatePosition")]
  public static extern void CompoundConstraint_updatePosition(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_delete_CompoundConstraint")]
  public static extern void delete_CompoundConstraint(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_generateVariablesAndConstraints")]
  public static extern void generateVariablesAndConstraints(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_new_BoundaryConstraint")]
  public static extern IntPtr new_BoundaryConstraint(double jarg1);

  [DllImport("cola", EntryPoint="CSharp_BoundaryConstraint_updatePosition")]
  public static extern void BoundaryConstraint_updatePosition(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_BoundaryConstraint_generateVariables")]
  public static extern void BoundaryConstraint_generateVariables(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_BoundaryConstraint_generateSeparationConstraints")]
  public static extern void BoundaryConstraint_generateSeparationConstraints(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_BoundaryConstraint_position_set")]
  public static extern void BoundaryConstraint_position_set(HandleRef jarg1, double jarg2);

  [DllImport("cola", EntryPoint="CSharp_BoundaryConstraint_position_get")]
  public static extern double BoundaryConstraint_position_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_BoundaryConstraint_leftOffsets_set")]
  public static extern void BoundaryConstraint_leftOffsets_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_BoundaryConstraint_leftOffsets_get")]
  public static extern IntPtr BoundaryConstraint_leftOffsets_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_BoundaryConstraint_rightOffsets_set")]
  public static extern void BoundaryConstraint_rightOffsets_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_BoundaryConstraint_rightOffsets_get")]
  public static extern IntPtr BoundaryConstraint_rightOffsets_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_BoundaryConstraint_variable_set")]
  public static extern void BoundaryConstraint_variable_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_BoundaryConstraint_variable_get")]
  public static extern IntPtr BoundaryConstraint_variable_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_delete_BoundaryConstraint")]
  public static extern void delete_BoundaryConstraint(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_new_AlignmentConstraint")]
  public static extern IntPtr new_AlignmentConstraint(double jarg1);

  [DllImport("cola", EntryPoint="CSharp_AlignmentConstraint_updatePosition")]
  public static extern void AlignmentConstraint_updatePosition(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_AlignmentConstraint_fixPos")]
  public static extern void AlignmentConstraint_fixPos(HandleRef jarg1, double jarg2);

  [DllImport("cola", EntryPoint="CSharp_AlignmentConstraint_unfixPos")]
  public static extern void AlignmentConstraint_unfixPos(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_AlignmentConstraint_offsets_set")]
  public static extern void AlignmentConstraint_offsets_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_AlignmentConstraint_offsets_get")]
  public static extern IntPtr AlignmentConstraint_offsets_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_AlignmentConstraint_guide_set")]
  public static extern void AlignmentConstraint_guide_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_AlignmentConstraint_guide_get")]
  public static extern IntPtr AlignmentConstraint_guide_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_AlignmentConstraint_position_set")]
  public static extern void AlignmentConstraint_position_set(HandleRef jarg1, double jarg2);

  [DllImport("cola", EntryPoint="CSharp_AlignmentConstraint_position_get")]
  public static extern double AlignmentConstraint_position_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_AlignmentConstraint_isFixed_set")]
  public static extern void AlignmentConstraint_isFixed_set(HandleRef jarg1, bool jarg2);

  [DllImport("cola", EntryPoint="CSharp_AlignmentConstraint_isFixed_get")]
  public static extern bool AlignmentConstraint_isFixed_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_AlignmentConstraint_generateVariables")]
  public static extern void AlignmentConstraint_generateVariables(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_AlignmentConstraint_generateSeparationConstraints")]
  public static extern void AlignmentConstraint_generateSeparationConstraints(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_AlignmentConstraint_variable_set")]
  public static extern void AlignmentConstraint_variable_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_AlignmentConstraint_variable_get")]
  public static extern IntPtr AlignmentConstraint_variable_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_delete_AlignmentConstraint")]
  public static extern void delete_AlignmentConstraint(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_new_SeparationConstraint__SWIG_0")]
  public static extern IntPtr new_SeparationConstraint__SWIG_0(uint jarg1, uint jarg2, double jarg3, bool jarg4);

  [DllImport("cola", EntryPoint="CSharp_new_SeparationConstraint__SWIG_1")]
  public static extern IntPtr new_SeparationConstraint__SWIG_1(uint jarg1, uint jarg2, double jarg3);

  [DllImport("cola", EntryPoint="CSharp_new_SeparationConstraint__SWIG_2")]
  public static extern IntPtr new_SeparationConstraint__SWIG_2(HandleRef jarg1, HandleRef jarg2, double jarg3, bool jarg4);

  [DllImport("cola", EntryPoint="CSharp_new_SeparationConstraint__SWIG_3")]
  public static extern IntPtr new_SeparationConstraint__SWIG_3(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("cola", EntryPoint="CSharp_SeparationConstraint_left_set")]
  public static extern void SeparationConstraint_left_set(HandleRef jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_SeparationConstraint_left_get")]
  public static extern uint SeparationConstraint_left_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_SeparationConstraint_right_set")]
  public static extern void SeparationConstraint_right_set(HandleRef jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_SeparationConstraint_right_get")]
  public static extern uint SeparationConstraint_right_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_SeparationConstraint_al_set")]
  public static extern void SeparationConstraint_al_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_SeparationConstraint_al_get")]
  public static extern IntPtr SeparationConstraint_al_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_SeparationConstraint_ar_set")]
  public static extern void SeparationConstraint_ar_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_SeparationConstraint_ar_get")]
  public static extern IntPtr SeparationConstraint_ar_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_SeparationConstraint_gap_set")]
  public static extern void SeparationConstraint_gap_set(HandleRef jarg1, double jarg2);

  [DllImport("cola", EntryPoint="CSharp_SeparationConstraint_gap_get")]
  public static extern double SeparationConstraint_gap_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_SeparationConstraint_equality_set")]
  public static extern void SeparationConstraint_equality_set(HandleRef jarg1, bool jarg2);

  [DllImport("cola", EntryPoint="CSharp_SeparationConstraint_equality_get")]
  public static extern bool SeparationConstraint_equality_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_SeparationConstraint_generateVariables")]
  public static extern void SeparationConstraint_generateVariables(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_SeparationConstraint_generateSeparationConstraints")]
  public static extern void SeparationConstraint_generateSeparationConstraints(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_SeparationConstraint_setSeparation")]
  public static extern void SeparationConstraint_setSeparation(HandleRef jarg1, double jarg2);

  [DllImport("cola", EntryPoint="CSharp_SeparationConstraint_vpscConstraint_set")]
  public static extern void SeparationConstraint_vpscConstraint_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_SeparationConstraint_vpscConstraint_get")]
  public static extern IntPtr SeparationConstraint_vpscConstraint_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_delete_SeparationConstraint")]
  public static extern void delete_SeparationConstraint(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_new_OrthogonalEdgeConstraint")]
  public static extern IntPtr new_OrthogonalEdgeConstraint(uint jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_OrthogonalEdgeConstraint_left_set")]
  public static extern void OrthogonalEdgeConstraint_left_set(HandleRef jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_OrthogonalEdgeConstraint_left_get")]
  public static extern uint OrthogonalEdgeConstraint_left_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_OrthogonalEdgeConstraint_right_set")]
  public static extern void OrthogonalEdgeConstraint_right_set(HandleRef jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_OrthogonalEdgeConstraint_right_get")]
  public static extern uint OrthogonalEdgeConstraint_right_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_OrthogonalEdgeConstraint_generateVariables")]
  public static extern void OrthogonalEdgeConstraint_generateVariables(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_OrthogonalEdgeConstraint_generateSeparationConstraints")]
  public static extern void OrthogonalEdgeConstraint_generateSeparationConstraints(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_OrthogonalEdgeConstraint_generateTopologyConstraints")]
  public static extern void OrthogonalEdgeConstraint_generateTopologyConstraints(HandleRef jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);

  [DllImport("cola", EntryPoint="CSharp_OrthogonalEdgeConstraint_vpscConstraint_set")]
  public static extern void OrthogonalEdgeConstraint_vpscConstraint_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_OrthogonalEdgeConstraint_vpscConstraint_get")]
  public static extern IntPtr OrthogonalEdgeConstraint_vpscConstraint_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_delete_OrthogonalEdgeConstraint")]
  public static extern void delete_OrthogonalEdgeConstraint(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_new_MultiSeparationConstraint__SWIG_0")]
  public static extern IntPtr new_MultiSeparationConstraint__SWIG_0(double jarg1, bool jarg2);

  [DllImport("cola", EntryPoint="CSharp_new_MultiSeparationConstraint__SWIG_1")]
  public static extern IntPtr new_MultiSeparationConstraint__SWIG_1(double jarg1);

  [DllImport("cola", EntryPoint="CSharp_new_MultiSeparationConstraint__SWIG_2")]
  public static extern IntPtr new_MultiSeparationConstraint__SWIG_2();

  [DllImport("cola", EntryPoint="CSharp_MultiSeparationConstraint_generateVariables")]
  public static extern void MultiSeparationConstraint_generateVariables(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_MultiSeparationConstraint_generateSeparationConstraints")]
  public static extern void MultiSeparationConstraint_generateSeparationConstraints(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_MultiSeparationConstraint_setSeparation")]
  public static extern void MultiSeparationConstraint_setSeparation(HandleRef jarg1, double jarg2);

  [DllImport("cola", EntryPoint="CSharp_MultiSeparationConstraint_cs_set")]
  public static extern void MultiSeparationConstraint_cs_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_MultiSeparationConstraint_cs_get")]
  public static extern IntPtr MultiSeparationConstraint_cs_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_MultiSeparationConstraint_acs_set")]
  public static extern void MultiSeparationConstraint_acs_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_MultiSeparationConstraint_acs_get")]
  public static extern IntPtr MultiSeparationConstraint_acs_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_MultiSeparationConstraint_indicator_set")]
  public static extern void MultiSeparationConstraint_indicator_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_MultiSeparationConstraint_indicator_get")]
  public static extern IntPtr MultiSeparationConstraint_indicator_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_MultiSeparationConstraint_sep_set")]
  public static extern void MultiSeparationConstraint_sep_set(HandleRef jarg1, double jarg2);

  [DllImport("cola", EntryPoint="CSharp_MultiSeparationConstraint_sep_get")]
  public static extern double MultiSeparationConstraint_sep_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_MultiSeparationConstraint_equality_set")]
  public static extern void MultiSeparationConstraint_equality_set(HandleRef jarg1, bool jarg2);

  [DllImport("cola", EntryPoint="CSharp_MultiSeparationConstraint_equality_get")]
  public static extern bool MultiSeparationConstraint_equality_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_delete_MultiSeparationConstraint")]
  public static extern void delete_MultiSeparationConstraint(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_new_DistributionConstraint")]
  public static extern IntPtr new_DistributionConstraint();

  [DllImport("cola", EntryPoint="CSharp_DistributionConstraint_generateVariables")]
  public static extern void DistributionConstraint_generateVariables(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_DistributionConstraint_generateSeparationConstraints")]
  public static extern void DistributionConstraint_generateSeparationConstraints(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_DistributionConstraint_setSeparation")]
  public static extern void DistributionConstraint_setSeparation(HandleRef jarg1, double jarg2);

  [DllImport("cola", EntryPoint="CSharp_DistributionConstraint_cs_set")]
  public static extern void DistributionConstraint_cs_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_DistributionConstraint_cs_get")]
  public static extern IntPtr DistributionConstraint_cs_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_DistributionConstraint_acs_set")]
  public static extern void DistributionConstraint_acs_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_DistributionConstraint_acs_get")]
  public static extern IntPtr DistributionConstraint_acs_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_DistributionConstraint_indicator_set")]
  public static extern void DistributionConstraint_indicator_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_DistributionConstraint_indicator_get")]
  public static extern IntPtr DistributionConstraint_indicator_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_DistributionConstraint_sep_set")]
  public static extern void DistributionConstraint_sep_set(HandleRef jarg1, double jarg2);

  [DllImport("cola", EntryPoint="CSharp_DistributionConstraint_sep_get")]
  public static extern double DistributionConstraint_sep_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_delete_DistributionConstraint")]
  public static extern void delete_DistributionConstraint(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_new_PageBoundaryConstraints__SWIG_0")]
  public static extern IntPtr new_PageBoundaryConstraints__SWIG_0(double jarg1, double jarg2, double jarg3);

  [DllImport("cola", EntryPoint="CSharp_new_PageBoundaryConstraints__SWIG_1")]
  public static extern IntPtr new_PageBoundaryConstraints__SWIG_1(double jarg1, double jarg2, double jarg3, double jarg4);

  [DllImport("cola", EntryPoint="CSharp_PageBoundaryConstraints_generateVariables")]
  public static extern void PageBoundaryConstraints_generateVariables(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_PageBoundaryConstraints_generateSeparationConstraints")]
  public static extern void PageBoundaryConstraints_generateSeparationConstraints(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_PageBoundaryConstraints_updatePosition")]
  public static extern void PageBoundaryConstraints_updatePosition(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_PageBoundaryConstraints_getActualLeftMargin")]
  public static extern double PageBoundaryConstraints_getActualLeftMargin(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_PageBoundaryConstraints_getActualRightMargin")]
  public static extern double PageBoundaryConstraints_getActualRightMargin(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_PageBoundaryConstraints_offsets_set")]
  public static extern void PageBoundaryConstraints_offsets_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_PageBoundaryConstraints_offsets_get")]
  public static extern IntPtr PageBoundaryConstraints_offsets_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_delete_PageBoundaryConstraints")]
  public static extern void delete_PageBoundaryConstraints(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_new_UnsatisfiableConstraintInfo")]
  public static extern IntPtr new_UnsatisfiableConstraintInfo(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_UnsatisfiableConstraintInfo_vlid_set")]
  public static extern void UnsatisfiableConstraintInfo_vlid_set(HandleRef jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_UnsatisfiableConstraintInfo_vlid_get")]
  public static extern uint UnsatisfiableConstraintInfo_vlid_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_UnsatisfiableConstraintInfo_vrid_set")]
  public static extern void UnsatisfiableConstraintInfo_vrid_set(HandleRef jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_UnsatisfiableConstraintInfo_vrid_get")]
  public static extern uint UnsatisfiableConstraintInfo_vrid_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_UnsatisfiableConstraintInfo_gap_set")]
  public static extern void UnsatisfiableConstraintInfo_gap_set(HandleRef jarg1, double jarg2);

  [DllImport("cola", EntryPoint="CSharp_UnsatisfiableConstraintInfo_gap_get")]
  public static extern double UnsatisfiableConstraintInfo_gap_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_delete_UnsatisfiableConstraintInfo")]
  public static extern void delete_UnsatisfiableConstraintInfo(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_dim_set")]
  public static extern void dim_set(int jarg1);

  [DllImport("cola", EntryPoint="CSharp_dim_get")]
  public static extern int dim_get();

  [DllImport("cola", EntryPoint="CSharp_Node_id_get")]
  public static extern uint Node_id_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_Node_rect_set")]
  public static extern void Node_rect_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_Node_rect_get")]
  public static extern IntPtr Node_rect_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_new_Node__SWIG_0")]
  public static extern IntPtr new_Node__SWIG_0(uint jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_new_Node__SWIG_1")]
  public static extern IntPtr new_Node__SWIG_1(uint jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_Node_setDesiredPos__SWIG_0")]
  public static extern void Node_setDesiredPos__SWIG_0(HandleRef jarg1, double jarg2, double jarg3);

  [DllImport("cola", EntryPoint="CSharp_Node_setDesiredPos__SWIG_1")]
  public static extern void Node_setDesiredPos__SWIG_1(HandleRef jarg1, double jarg2);

  [DllImport("cola", EntryPoint="CSharp_Node_initialPos")]
  public static extern double Node_initialPos(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_Node_finalPos")]
  public static extern double Node_finalPos(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_Node_posOnLine")]
  public static extern double Node_posOnLine(HandleRef jarg1, double jarg2);

  [DllImport("cola", EntryPoint="CSharp_Node_getVar")]
  public static extern IntPtr Node_getVar(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_Node_var_set")]
  public static extern void Node_var_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_Node_var_get")]
  public static extern IntPtr Node_var_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_delete_Node")]
  public static extern void delete_Node(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_setNodeVariables")]
  public static extern void setNodeVariables(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_EdgePoint_node_set")]
  public static extern void EdgePoint_node_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_EdgePoint_node_get")]
  public static extern IntPtr EdgePoint_node_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_EdgePoint_rectIntersect_set")]
  public static extern void EdgePoint_rectIntersect_set(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_EdgePoint_rectIntersect_get")]
  public static extern int EdgePoint_rectIntersect_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_new_EdgePoint")]
  public static extern IntPtr new_EdgePoint(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_EdgePoint_pos")]
  public static extern double EdgePoint_pos(HandleRef jarg1, int jarg2);

  [DllImport("cola", EntryPoint="CSharp_EdgePoint_posX")]
  public static extern double EdgePoint_posX(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_EdgePoint_posY")]
  public static extern double EdgePoint_posY(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_EdgePoint_rectIntersectAsVertexNumber")]
  public static extern ushort EdgePoint_rectIntersectAsVertexNumber(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_EdgePoint_uniqueCheck")]
  public static extern bool EdgePoint_uniqueCheck(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_delete_EdgePoint")]
  public static extern void delete_EdgePoint(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_EdgePoint_isEnd")]
  public static extern bool EdgePoint_isEnd(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_EdgePoint_assertConvexBend")]
  public static extern bool EdgePoint_assertConvexBend(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_EdgePoint_offset")]
  public static extern double EdgePoint_offset(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_Edge_id_set")]
  public static extern void Edge_id_set(HandleRef jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_Edge_id_get")]
  public static extern uint Edge_id_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_Edge_idealLength_set")]
  public static extern void Edge_idealLength_set(HandleRef jarg1, double jarg2);

  [DllImport("cola", EntryPoint="CSharp_Edge_idealLength_get")]
  public static extern double Edge_idealLength_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_Edge_nSegments_set")]
  public static extern void Edge_nSegments_set(HandleRef jarg1, uint jarg2);

  [DllImport("cola", EntryPoint="CSharp_Edge_nSegments_get")]
  public static extern uint Edge_nSegments_get(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_new_Edge")]
  public static extern IntPtr new_Edge(uint jarg1, double jarg2, HandleRef jarg3);

  [DllImport("cola", EntryPoint="CSharp_delete_Edge")]
  public static extern void delete_Edge(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_Edge_pathLength")]
  public static extern double Edge_pathLength(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_Edge_getPath")]
  public static extern void Edge_getPath(HandleRef jarg1, HandleRef jarg2);

  [DllImport("cola", EntryPoint="CSharp_Edge_assertConvexBends")]
  public static extern bool Edge_assertConvexBends(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_Edge_cycle")]
  public static extern bool Edge_cycle(HandleRef jarg1);

  [DllImport("cola", EntryPoint="CSharp_crossProduct")]
  public static extern double crossProduct(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6);

  [DllImport("cola", EntryPoint="CSharp_RectangularClusterUpcast")]
  public static extern IntPtr RectangularClusterUpcast(IntPtr objectRef);

  [DllImport("cola", EntryPoint="CSharp_RootClusterUpcast")]
  public static extern IntPtr RootClusterUpcast(IntPtr objectRef);

  [DllImport("cola", EntryPoint="CSharp_ConvexClusterUpcast")]
  public static extern IntPtr ConvexClusterUpcast(IntPtr objectRef);

  [DllImport("cola", EntryPoint="CSharp_BoundaryConstraintUpcast")]
  public static extern IntPtr BoundaryConstraintUpcast(IntPtr objectRef);

  [DllImport("cola", EntryPoint="CSharp_AlignmentConstraintUpcast")]
  public static extern IntPtr AlignmentConstraintUpcast(IntPtr objectRef);

  [DllImport("cola", EntryPoint="CSharp_SeparationConstraintUpcast")]
  public static extern IntPtr SeparationConstraintUpcast(IntPtr objectRef);

  [DllImport("cola", EntryPoint="CSharp_OrthogonalEdgeConstraintUpcast")]
  public static extern IntPtr OrthogonalEdgeConstraintUpcast(IntPtr objectRef);

  [DllImport("cola", EntryPoint="CSharp_MultiSeparationConstraintUpcast")]
  public static extern IntPtr MultiSeparationConstraintUpcast(IntPtr objectRef);

  [DllImport("cola", EntryPoint="CSharp_DistributionConstraintUpcast")]
  public static extern IntPtr DistributionConstraintUpcast(IntPtr objectRef);

  [DllImport("cola", EntryPoint="CSharp_PageBoundaryConstraintsUpcast")]
  public static extern IntPtr PageBoundaryConstraintsUpcast(IntPtr objectRef);
}

}
